openapi: 3.0.3
info:
  title: Know Your Customer Fill-in

  description: |

    This API provides the customer with the ability request and receive the information for a particular user, which on file (and verified) by the user's Operator in their own KYC records, in order for the SP to confirm the accuracy of the information and provide a specific service to the user.

    ## Relevant Definitions and concepts

    * **KYC**: stands for Know Your Customer and it is the process of a business verifying the identity of their clients and assessing their suitability, along with the potential risks of illegal intentions towards the business relationship.

    ## API Functionality
  
    This API allows API clients to request for API provider / MNO to provide information related to a mobile phone user, derived from the account data bound to their phone number.  The API is intended to be used in the following scenario, for example:

    * To fill-in the user personal data during the digital registration of an account to a 3rd party service.

    The following figure is the generic high-level flows of this API.  

    <img width="854" alt="KYC_Fill-in_flow" src="https://github.com/ToshiWakayama-KDDI/KnowYourCustomer-Toshi/assets/53090722/f23daa52-bb28-4236-b90d-0184d303f907">

    Note:

    * Before calling this API, 3rd parties / enterprise customers who want to use this API should make contract with API provider/ Operator for use of this API.  As that will depend on each API provider / MNO's business processes as well as GSMA Open Gateway standard process, it is out of scope of this API definition.

    * When calling this API, at the beginning, there should be required processes for Authentication / Authorisation / End User Consent capturing.  As those processes are to be defined as CAMARA commonality standards, they are out of scope of this API definition, however, use of the OpenID Connect (OIDC) is stated as security scheme.  **As an important note**, capturing end user consent is necessary, because this API provides end user information (PII).

    * For this version of the KYC Fill-in API, the request body of the Fill-in Request does not include any parameters/attributes.  The above mentioned AuthN/AuthZ/End User consent capturing processes can give the API provider/ MNO the 3rd party identity (with the Access Token) and the end user identity (with the ID Token), so the API provider/ MNO can identify the 3rd party / enterprise customer and the end user.  Then, it is up to API provider/ MNO to decide which information the 3rd party will receive by calling the API, and also the API provider / MNO is responsible for security and privacy issues.

    * For example, below is a potential operation:
      * when making contract with API provider/ MNO, a 3rd party / enterprise customer receives its 3rd party identity and also decide which information (attributes) it will receive for its API call
      * when calling this API, the client of a 3rd party / enterprise customer put its 3rd party identity (only) in the request body
      * then, API provider / MNO will provide information (attributes) which the 3rd party / enterprise customer is allowed to receive by the contract.


    ## Resources and Operations overview

    The API provides the following endpoint:

    * An endpoint to request information related to an end user against the acount data bound to their phone number.


  termsOfService: http://swagger.io/terms/
  contact:
    email: project-email@sample.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

  version: 0.1.0-wip

servers:
  - url: '{apiRoot}/{basePath}'
    variables:
      apiRoot:
        default: http://localhost:9091
        description: API root
      basePath:
        default: kyc-fill-in/v0
        description: Base path for the KYC-Fill-in API

tags:
  - name: Fill-in
    description: Operations to provide information related to a customer identity stored the account data bound to the customer's phone number.

paths:
  /fill-in:
    post:
      tags:
        - Fill-in
      summary: Providing information related to a customer identity stored the account data bound to the customer's phone number.

      operationId: KYC_Fill-in

      security:
        - openId:
          - know-your-customer:fill-in

      parameters:
        - $ref: '#/components/parameters/x-correlator'

      responses:
        '200':
          description: OK

          headers:
            x-correlator:
              $ref: '#/components/headers/x-correlator'

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KYC_FillinResponse'
              examples:
                KYC_Fillin200Example:
                  value:
                    phoneNumber: '+34629255833'
                    idDocument: 66666666q
                    name: Federica Sanchez Arjona
                    giventName: Federica
                    familyName: Sanchez Arjona
                    nameKanaHankaku: federica
                    nameKanaZenkaku: Ｆｅｄｅｒｉｃａ
                    middleNames: Sanchez
                    familyNameAtBirth: YYYY
                    address: Tokyo-to Chiyoda-ku Iidabashi 3-10-10
                    streetName: Nicolas Salmeron
                    streetNumber: 4
                    postalCode: 1028460
                    region: Tokyo
                    locality: ZZZZ
                    country: Japan
                    houseNumberExtension: 36
                    birthdate: '1978-08-22'
                    email: abc@example.com
                    gender: male

        '400':
          $ref: '#/components/responses/Generic400'

        '401':
          $ref: '#/components/responses/Generic401'

        '404':
          $ref: '#/components/responses/Generic404'

        '500':
          $ref: '#/components/responses/Generic500'

        '503':
          $ref: '#/components/responses/Generic503'

components:
  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: https://example.com/.well-known/openid-configuration

  headers:
    x-correlator:
      description: Correlation id for the different services
      schema:
        type: string
   
  parameters:
    x-correlator:
      name: x-correlator
      in: header
      description: Correlation id for the different services
      schema:
        type: string
        
  schemas:

    KYC_FillinResponse:
      type: object
      properties:

        phoneNumber:
          type: string
          description: the phone number of the customer stored on the OB systems.

        idDocument:
         type: string
         description: Id number associated to the id_document of the customer stored on the OB systems.
         
        name:
          type: string
          description: the full name of the customer stored on the OB systems.
        
        givenName:
          type: string
          description: First name/given name of the customer stored on the OB systems.
          
        familyName:
          type: string
          description: Surname/family name of the customer stored on the OB systems.
          
        nameKanaHankaku:
          type: string
          description: Reading of the full name of the customer in full-width Kana format stored on the OB systems.

        nameKanaZenkaku:
          type: string
          description: Reading of the full name of the customer in half-width Kana format stored on the OB systems.

        middleNames:
          type: string
          description: the middle names of the customer stored on the OB systems.

        familyNameAtBirth:
          type: string
          description: the Family Name At Birth of the customer stored on the OB systems.
          
        address:
          type: string
          description: the address of the customer stored on the OB systems.
          
        streetName:
          type: string
          description: the street name of the customer stored on the OB systems.
          
        streetNumber:
          type: string
          description: the street number of the customer stored on the OB systems.
          
        postalCode:
          type: string
          description: the postal code of the customer stored on the OB systems.
          
        region:
          type: string
          description: the region of the customer stored on the OB systems.
          
        locality:
          type: string
          description: the locality of the customer stored on the OB systems.

        country:
          type: string
          description: the country of the customer stored on the OB systems.
          
        houseNumberExtension:
          type: string
          description: the house number extension of the customer stored on the OB systems.
          
        birthdate:
          type: string
          description: the birthdate of the customer stored on the OB systems.
          
        email:
          type: string
          description: the email address of the customer stored on the OB systems.
          
        gender:
          type: string
          description: the gender of the customer stored on the OB systems.
          
    ErrorInfo:
      type: object
      required:
        - status
        - code
        - message
      properties:
        status:
          type: integer
          description: HTTP response status code
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description

  responses:
    Generic400:
      description: |-
        Problem with the client request.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            InvalidArgument:
              value:
                status: 400
                code: INVALID_ARGUMENT
                message: Client specified an invalid argument, request body or query para
                
    Generic401:
      description: Authentication problem with the client request. Unauthorized error. Access Token related errors.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            Unauthenticated:
              value:
                status: 401
                code: UNAUTHENTICATED
                message: Request not authenticated due to missing, invalid, or espired credentials

    Generic404:
      description: |
        Not Found error.  Error if URL is wrong / user is not found.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            NotFound:
              value:
                status: 404
                code: NOT_FOUND
                message: not_found_contractor/not_found

    Generic500:
      description: Server error. Problem with MNO's server side. Some processing error within MNO's servers.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            ServerError:
              value:
                status: 500
                code: INTERNAL
                message: Server error
                
    Generic503:
      description: Service unavailable. Problem with MNO's server side.  Any unexpected error within MNO's servers.
      headers:
        x-correlator:
          $ref: '#/components/headers/x-correlator'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          examples:
            ServiceUnavailable:
              value:
                status: 503
                code: UNAVAILABLE
                message: Service unavailable


